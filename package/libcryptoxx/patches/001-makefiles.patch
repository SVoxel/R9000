--- a/Makefile.am
+++ b/Makefile.am
@@ -0,0 +1,315 @@
+AUTOMAKE_OPTIONS = foreign
+lib_LTLIBRARIES = libcrypto++.la
+libcrypto___la_LIBADD = -lpthread
+libcrypto___la_LDFLAGS = -version-info 6:0:0
+libcrypto___la_SOURCES =  \
+	3way.cpp \
+	adler32.cpp \
+	algebra.cpp \
+	algparam.cpp \
+	arc4.cpp \
+	asn.cpp \
+	authenc.cpp \
+	base32.cpp \
+	base64.cpp \
+	basecode.cpp \
+	bfinit.cpp \
+	blake2.cpp \
+	blowfish.cpp \
+	blumshub.cpp \
+	camellia.cpp \
+	cast.cpp \
+	casts.cpp \
+	cbcmac.cpp \
+	ccm.cpp \
+	chacha.cpp \
+	channels.cpp \
+	cmac.cpp \
+	cpu.cpp \
+	crc.cpp \
+	cryptlib.cpp \
+	default.cpp \
+	des.cpp \
+	dessp.cpp \
+	dh.cpp \
+	dh2.cpp \
+	dll.cpp \
+	dsa.cpp \
+	eax.cpp \
+	ec2n.cpp \
+	eccrypto.cpp \
+	ecp.cpp \
+	elgamal.cpp \
+	emsa2.cpp \
+	eprecomp.cpp \
+	esign.cpp \
+	files.cpp \
+	filters.cpp \
+	fips140.cpp \
+	fipstest.cpp \
+	gcm.cpp \
+	gf256.cpp \
+	gf2_32.cpp \
+	gf2n.cpp \
+	gfpcrypt.cpp \
+	gost.cpp \
+	gzip.cpp \
+	hex.cpp \
+	hmac.cpp \
+	hrtimer.cpp \
+	ida.cpp \
+	idea.cpp \
+	integer.cpp \
+	iterhash.cpp \
+	keccak.cpp \
+	luc.cpp \
+	md2.cpp \
+	md4.cpp \
+	md5.cpp \
+	misc.cpp \
+	modes.cpp \
+	mqueue.cpp \
+	mqv.cpp \
+	nbtheory.cpp \
+	network.cpp \
+	oaep.cpp \
+	osrng.cpp \
+	panama.cpp \
+	pch.cpp \
+	pkcspad.cpp \
+	polynomi.cpp \
+	pssr.cpp \
+	pubkey.cpp \
+	queue.cpp \
+	rabin.cpp \
+	randpool.cpp \
+	rc2.cpp \
+	rc5.cpp \
+	rc6.cpp \
+	rdrand.cpp \
+	rdtables.cpp \
+	rijndael.cpp \
+	ripemd.cpp \
+	rng.cpp \
+	rsa.cpp \
+	rw.cpp \
+	safer.cpp \
+	salsa.cpp \
+	seal.cpp \
+	seed.cpp \
+	serpent.cpp \
+	sha.cpp \
+	shacal2.cpp \
+	shark.cpp \
+	sharkbox.cpp \
+	simple.cpp \
+	skipjack.cpp \
+	socketft.cpp \
+	sosemanuk.cpp \
+	square.cpp \
+	squaretb.cpp \
+	strciphr.cpp \
+	tea.cpp \
+	tftables.cpp \
+	tiger.cpp \
+	tigertab.cpp \
+	trdlocal.cpp \
+	ttmac.cpp \
+	twofish.cpp \
+	vmac.cpp \
+	wait.cpp \
+	wake.cpp \
+	whrlpool.cpp \
+	winpipes.cpp \
+	xtr.cpp \
+	xtrcrypt.cpp \
+	zdeflate.cpp \
+	zinflate.cpp \
+	zlib.cpp \
+	sha3.cpp \
+	mars.cpp \
+	marss.cpp
+
+pkginclude_HEADERS = \
+	3way.h \
+	adler32.h \
+	aes.h \
+	algebra.h \
+	algparam.h \
+	arc4.h \
+	argnames.h \
+	asn.h \
+	authenc.h \
+	base32.h \
+	base64.h \
+	basecode.h \
+	bench.h \
+	blake2.h \
+	blowfish.h \
+	blumshub.h \
+	camellia.h \
+	cast.h \
+	cbcmac.h \
+	ccm.h \
+	chacha.h \
+	channels.h \
+	cmac.h \
+	config.h \
+	cpu.h \
+	crc.h \
+	cryptlib.h \
+	default.h \
+	des.h \
+	dh2.h \
+	dh.h \
+	dll.h \
+	dmac.h \
+	dsa.h \
+	eax.h \
+	ec2n.h \
+	eccrypto.h \
+	ecp.h \
+	elgamal.h \
+	emsa2.h \
+	eprecomp.h \
+	esign.h \
+	factory.h \
+	fhmqv.h \
+	files.h \
+	filters.h \
+	fips140.h \
+	fltrimpl.h \
+	gcm.h \
+	gf2_32.h \
+	gf256.h \
+	gf2n.h \
+	gfpcrypt.h \
+	gost.h \
+	gzip.h \
+	hex.h \
+	hmac.h \
+	hmqv.h \
+	hrtimer.h \
+	ida.h \
+	idea.h \
+	integer.h \
+	iterhash.h \
+	keccak.h \
+	lubyrack.h \
+	luc.h \
+	md2.h \
+	md4.h \
+	md5.h \
+	mdc.h \
+	misc.h \
+	modarith.h \
+	modes.h \
+	modexppc.h \
+	mqueue.h \
+	mqv.h \
+	nbtheory.h \
+	network.h \
+	nr.h \
+	oaep.h \
+	oids.h \
+	osrng.h \
+	panama.h \
+	pch.h \
+	pkcspad.h \
+	polynomi.h \
+	pssr.h \
+	pubkey.h \
+	pwdbased.h \
+	queue.h \
+	rabin.h \
+	randpool.h \
+	rc2.h \
+	rc5.h \
+	rc6.h \
+	rijndael.h \
+	ripemd.h \
+	rng.h \
+	rsa.h \
+	rw.h \
+	safer.h \
+	salsa.h \
+	seal.h \
+	secblock.h \
+	seckey.h \
+	seed.h \
+	serpent.h \
+	shacal2.h \
+	sha.h \
+	shark.h \
+	simple.h \
+	skipjack.h \
+	smartptr.h \
+	socketft.h \
+	sosemanuk.h \
+	square.h \
+	stdcpp.h \
+	strciphr.h \
+	tea.h \
+	tiger.h \
+	trdlocal.h \
+	trunhash.h \
+	ttmac.h \
+	twofish.h \
+	vmac.h \
+	wait.h \
+	wake.h \
+	whrlpool.h \
+	winpipes.h \
+	words.h \
+	xtrcrypt.h \
+	xtr.h \
+	zdeflate.h \
+	zinflate.h \
+	zlib.h \
+	sha3.h \
+	mars.h
+
+
+noinst_HEADERS = \
+	local.h \
+	resource.h \
+	serpentp.h
+	validate.h
+
+bin_PROGRAMS = cryptest cryptestcwd
+cryptest_CXXFLAGS = $(CXXFLAGS) -DCRYPTOPP_DATA_DIR='"/opt/share/crypto++/"'
+cryptest_SOURCES = \
+	bench1.cpp \
+	bench2.cpp \
+	test.cpp \
+	validat1.cpp \
+	validat2.cpp \
+	validat3.cpp \
+	datatest.cpp \
+	regtest.cpp \
+	fipsalgt.cpp \
+	dlltest.cpp
+nodist_cryptest_SOURCES = adhoc.cpp
+cryptest_LDADD = $(lib_LTLIBRARIES)
+cryptestcwd_CXXFLAGS = $(CXXFLAGS) -DCRYPTOPP_DATA_DIR='""'
+cryptestcwd_SOURCES = \
+	bench1.cpp \
+	bench2.cpp \
+	test.cpp \
+	validat1.cpp \
+	validat2.cpp \
+	validat3.cpp \
+	datatest.cpp \
+	regtest.cpp \
+	fipsalgt.cpp \
+	dlltest.cpp
+nodist_cryptestcwd_SOURCES = adhoc.cpp
+CLEANFILES = adhoc.cpp
+cryptestcwd_LDADD = $(lib_LTLIBRARIES)
+
+adhoc.cpp: Makefile
+	if test -f adhoc.cpp; then      \
+	  touch adhoc.cpp;              \
+	else                            \
+	  cp adhoc.cpp.proto adhoc.cpp; \
+	fi
--- a/libcrypto++.pc.in
+++ b/libcrypto++.pc.in
@@ -0,0 +1,12 @@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+libdir=@libdir@
+includedir=@includedir@
+
+Name: libcrypto++
+Description: General purpose cryptographic shared library
+URL: http://www.cryptopp.com
+Version: @VERSION@
+Requires:
+Libs: -lcrypto++
+Cflags:
--- a/configure.ac
+++ b/configure.ac
@@ -0,0 +1,15 @@
+AC_INIT([Crypto++], [5.6.4], [cryptopp-users@googlegroups.com])
+AM_INIT_AUTOMAKE
+AC_CONFIG_SRCDIR(configure.ac)
+AC_CONFIG_HEADER([local.h])
+AM_MAINTAINER_MODE
+
+AC_PROG_CXX
+AC_PROG_LIBTOOL
+AC_PROG_INSTALL
+
+AC_C_BIGENDIAN
+
+AC_CONFIG_FILES([Makefile libcrypto++.pc])
+AC_CONFIG_MACRO_DIR([m4])
+AC_OUTPUT

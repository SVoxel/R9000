#!/bin/sh

version=`cat /cloud_version`
config=/bin/config
sleep_time_1=60
sleep_time_2=300
sleep_time_3=600
sleep_time_4=1800
sleep_time_5=3600

dynamic_sleep() {
	if [ $retry_count -lt 5 ]; then
		let retry_count=$retry_count+1
	fi
	eval sleep_time=\$sleep_time_$retry_count
	/bin/sleep $sleep_time
}

start() {
	[ -d /opt ] && {
		/opt/xagent/run-xagent.sh
		/bin/sleep 5
		/www/cgi-bin/readycloud_control.cgi
		/bin/sleep 5
	}
}

uninstall() {
	[ -s /opt/filelist ] && /bin/cat /opt/filelist | xargs rm -f
	if [ -f /opt/dirlist ]; then
		/bin/mv -f /opt/dirlist /tmp/cloud_dirlist
		while read line; do
			/bin/rmdir $line
		done < /tmp/cloud_dirlist
		if [ -d /opt ]; then
			/bin/rmdir /opt
		fi
	fi
	/bin/rm -f /tmp/cloud_dirlist
	/bin/rm -f /tmp/.cloud_updated
}

checkversion() {
	[ -d /opt ] || return 1
	[ "x$(grep $version /opt/version)" = "x" ] && uninstall
}

backup() {
	[ -s /overlay/opt/filelist ] || return 1
	while read file; do
		target="/tmp/clouddir$(dirname $file)"
		/bin/mkdir -p $target
		/bin/cp -f $file $target
	done < /overlay/opt/filelist
}

restore() {
	[ -d /tmp/clouddir ] || return 1
	/bin/cp -fpR /tmp/clouddir/overlay/* /overlay
	/bin/rm -rf /tmp/clouddir
}

update() {
	# Check if cloud is disabled
	if [ -f /.nocloud ]; then
		exit 0
	fi

	nocloud=$($config get nocloud)
	if [ "$nocloud" = "1" ]; then
		exit 0
	fi

	[ -f /tmp/.cloud_updated ] && return 1
	PID_file=/var/run/cloud.pid
	[ -f $PID_file ] && return 1
	/bin/echo "$$" > $PID_file
	/bin/echo "start to get info from ftp://updates1.netgear.com/sw-apps/ready-genie-cloud/r9000/"
	retry_count=0
	while [ 1 ]; do
		/usr/bin/curl ftp://updates1.netgear.com/sw-apps/ready-genie-cloud/r9000/ 2>/dev/null | /bin/grep readygeniecloud-r9000new-$version-.*.tar.gz > /tmp/cloud_info
		[ -s /tmp/cloud_info ] && break
		/bin/echo "cannot access ftp://updates1.netgear.com/sw-apps/ready-genie-cloud/r9000/ or don't find readygeniecloud tarball with version $version"
		dynamic_sleep
	done
	fullversion=`/usr/bin/tail -1 /tmp/cloud_info | /usr/bin/awk '{print $9}'`
	if [ -f /opt/version -a "x$(/bin/cat /opt/version)" = "x$fullversion" ]; then
		/bin/rm -f /tmp/cloud_info
		/bin/touch /tmp/.cloud_updated
		/bin/rm -f $PID_file
		/bin/echo "the readygeniecloud on update server is same as on R/W filesystem"
		start
		return 1
	fi
	size=`/usr/bin/tail -1 /tmp/cloud_info | /usr/bin/awk '{print $5}'`
	/bin/echo "start to download ftp://updates1.netgear.com/sw-apps/ready-genie-cloud/r9000/$fullversion"
	retry_count=0
	while [ 1 ]; do
		/usr/bin/curl ftp://updates1.netgear.com/sw-apps/ready-genie-cloud/r9000/$fullversion -o /tmp/cloud.tar.gz 2>/dev/null
		[ "$(/usr/bin/wc -c /tmp/cloud.tar.gz | /usr/bin/awk '{print $1}')" = "$size" ] && break
		/bin/echo "fail to download ftp://updates1.netgear.com/sw-apps/ready-genie-cloud/r9000/readygeniecloud-r9000-$fullversion"
		dynamic_sleep
	done
	uninstall
	/bin/mkdir /tmp/clouddir
	/usr/bin/tar xzf /tmp/cloud.tar.gz -C /tmp/clouddir
	/bin/echo $fullversion > /tmp/clouddir/opt/version
	/bin/touch /tmp/clouddir/opt/filelist
	/usr/bin/find /tmp/clouddir -type f | /bin/sed 's/\/tmp\/clouddir/\/overlay/' > /tmp/clouddir/opt/filelist
	/usr/bin/find /tmp/clouddir/opt -type d | /bin/sed 's/\/tmp\/clouddir/\/overlay/' | sort -r > /tmp/clouddir/opt/dirlist
	/bin/cp -fpR /tmp/clouddir/* /
	/bin/rm -f /tmp/cloud_info
	/bin/rm -f /tmp/cloud.tar.gz
	/bin/rm -rf /tmp/clouddir
	/bin/touch /tmp/.cloud_updated
	/bin/echo "install ftp://updates1.netgear.com/sw-apps/ready-genie-cloud/r9000/$fullversion to R/W filesystem successfully"
	start
	/bin/rm -f $PID_file
}

case "$1" in
	start)
	start
	;;
	backup)
	backup
	;;
	restore)
	restore
	;;
	checkversion)
	checkversion
	;;
	update)
	update
	;;
	uninstall)
	uninstall
	;;
esac

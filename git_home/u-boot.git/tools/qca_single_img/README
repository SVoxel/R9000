QCA Single Image Tool
=====================

How to Generate Single Image for New Hardware
---------------------------------------------

Example: board/qcom/hw29764841p0p128p256p3x3p4x4/config.mk

0. Create "config.mk" in directory of your hardware if it does not exist. For
   example: board/qcom/hw29764841p0p128p256p3x3p4x4/config.mk

1. In "config.mk" of your hardware, specify commit of qsdk-chipcode.git your
   hardware uses in Makefile variable "CONFIG_QCA_SINGLE_IMG_TREEISH" and
   export it. For example:

        CONFIG_QCA_SINGLE_IMG_TREEISH = 4b360057b82b41aefc2f8afb928aa2c227147c0b

        export CONFIG_QCA_SINGLE_IMG_TREEISH

2. In "config.mk" of your hardware, specify files depended by single image
   generation process to Make file variable "single_img_dep". For example:

        single_img_dep = $(obj)u-boot.mbn tools/pack.py

   Note: "$(obj)" is used by remote build function of U-Boot. Simply ignore it
         if you do not plan to use the remote build function.

         For more information about remote build, please refer to "$(OBJTREE)"
         and "$(obj)" in both "Makefile" and "config.mk" under top directory
         of U-Boot source tree.

3. In "config.mk" of your hardware, define single image build process of your
   hardware in multi-line variable "BuildSingleImg". It should look like
   following lines:

	define BuildSingleImg
		$(MAKE) -C tools/qca_single_img/ patch_clean
		cp -R board/"$(BOARDDIR)"/qca_single_img/./ \
				$(obj)tools/qca_single_img/
		$(MAKE) -C tools/qca_single_img/

		@ ### Steps described in QSDK release notes ###
		cp $(obj)u-boot.mbn \
				$(obj)tools/qca_single_img/qsdk-chipcode/common/build/ipq/
		cp $(src)tools/pack.py \
				$(obj)tools/qca_single_img/qsdk-chipcode/apss_proc/out/
		cd $(obj)tools/qca_single_img/qsdk-chipcode/common/build && \
				python update_common_info.py

		cp $(obj)tools/qca_single_img/qsdk-chipcode/common/build/bin/nand-ipq806x-single.img $@
	endef

   This can be divided into 3 parts:

    3.1. Archive qsdk-chipcode directory tree out of qsdk-chipcode.git and
         apply local patches of current hardware:

		$(MAKE) -C tools/qca_single_img/ patch_clean
		cp -R board/"$(BOARDDIR)"/qca_single_img/./ \
			$(obj)tools/qca_single_img/
		$(MAKE) -C tools/qca_single_img/

         "qca_single_img" accepts local patch system similar to one in OpenWrt
	 buildroot:

            "files/" directory contains files to replace same files in
            corresponding qsdk-chipcode directory tree;

            "patches/" directory contains patch files which will be applied to
            "tools/qca_single_img/qsdk-chipcode/" directory tree.

    3.2. Follow QSDK release notes to build single image:

		@ ### Steps described in QSDK release notes ###
		cp $(obj)u-boot.mbn \
				$(obj)tools/qca_single_img/qsdk-chipcode/common/build/ipq/
		cp $(src)tools/pack.py \
				$(obj)tools/qca_single_img/qsdk-chipcode/apss_proc/out/
		cd $(obj)tools/qca_single_img/qsdk-chipcode/common/build && \
				python update_common_info.py

    3.3. Copy result single image back to top directory of U-Boot source tree:

		cp $(obj)tools/qca_single_img/qsdk-chipcode/common/build/bin/nand-ipq806x-single.img $@

         where "$@" is "u-boot-single.img" defined in "Makefile" under top
         directory of U-Boot source tree.

What does tools/qca_single_img/Makefile do
------------------------------------------

* Archive qsdk-chipcode directory tree out of qsdk-chipcode.git, use files
  under "files/" to replace corresponding files under
  "tools/qca_single_img/qsdk-chipcode/" directory tree, and then apply patches
  under "patches/" to the directory tree.

* "patch_clean" target removes "files/", "patches/", and
  "qsdk-chipcode/.prepared_*" under "tools/qca_single_img/".

  The remove of "qsdk-chipcode/.prepared_*" can trigger qsdk-chipcode.git to
  be archived and patched again.

* "clean" target removes all files generated by the Makefile.

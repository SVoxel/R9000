Index: linux-3.3.8/drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c
===================================================================
--- linux-3.3.8.orig/drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c	2013-07-25 10:50:00.178293562 -0500
+++ linux-3.3.8/drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c	2013-07-25 10:50:00.174293562 -0500
@@ -658,9 +658,9 @@
 	 * so we don't need any extra alignment in that case.
 	 */
 	if (!ag71xx_get_pdata(ag)->is_ar724x || ag71xx_has_ar8216(ag)) {
-		ag->rx_buf_offset = 0;
+		ag->rx_buf_offset = AG71XX_HACK_WIFI_HEADROOM;
 	} else {
-		ag->rx_buf_offset = NET_IP_ALIGN;
+		ag->rx_buf_offset = AG71XX_HACK_WIFI_HEADROOM + NET_IP_ALIGN;
 	}
 
 	ret = ag71xx_rings_init(ag);
Index: linux-3.3.8/drivers/net/ethernet/atheros/ag71xx/ag71xx.h
===================================================================
--- linux-3.3.8.orig/drivers/net/ethernet/atheros/ag71xx/ag71xx.h	2013-07-25 10:50:00.178293562 -0500
+++ linux-3.3.8/drivers/net/ethernet/atheros/ag71xx/ag71xx.h	2013-07-25 11:14:10.290320786 -0500
@@ -62,6 +62,13 @@
 	(ETH_FRAME_LEN + ETH_FCS_LEN + VLAN_HLEN)
 #define AG71XX_RX_BUF_SIZE (AG71XX_RX_PKT_SIZE + NET_SKB_PAD + NET_IP_ALIGN)
 
+/*
+ * The 802.11n driver circa 10.1.389 requires a significant amount of headroom
+ * to avoid reallocating and copying when transmitting a buffer.  This causes
+ * this driver to pre-allocate enough headroom to avoid the reallocation later.
+ */
+#define AG71XX_HACK_WIFI_HEADROOM	128
+
 #define AG71XX_TX_RING_SIZE_DEFAULT	128
 #define AG71XX_RX_RING_SIZE_DEFAULT	128
 
